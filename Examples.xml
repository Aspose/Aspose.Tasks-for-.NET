<?xml version="1.0" encoding="utf-8"?>
<Data>
  <Folders>
    <Folder>
      <Title>Programmers Guide</Title>
      <Description>This section includes the examples related to following topics: 

- Working with Projects
- Working with Calendars
- Working with Calendar Exceptions
- Working with Tasks
- Working with Task Links
- Working with Task Baselines
- Working with Resources
- Working with Resource Assignments
- Working with Currencies
- Miscellaneous
- Using Aspose.Tasks for .NET in other programming languages</Description>
      <FolderName>ProgrammersGuide</FolderName>
      <Order>1</Order>
      <Folders>
        <Folder>
          <Title>Working with Projects</Title>
          <Description>This section includes the examples related to following topics: 

- Creating an Empty Project File
- Reading a Project File
- Determining Project Version
- General Project Properties
- Default Project Properties
- Writing MPP Project Summary Information
- Fiscal Year Properties
- Weekday Properties
- Currency Properties
- Retrieving Calendar Information
- Setting Attributes for New Tasks
- Retrieving Task Information
- Adding and Removing Tasks
- Writing Tasks to Project
- Retrieving Task Links
- Adding and Removing Task Links
- Defining Root Task
- Retrieving Resource Information
- Adding and Removing Resources
- Writing Resources to Project
- Retrieving Resource Assignment Information
- Adding and Removing Resource Assignments
- Writing Resource Assignments to Project
- Performing Recalculations
- Verifying Project Structure
- Remove Methods
- GetObjectByField Methods
- Replacing a Calendar
- Extended Attributes
- Calculate Critical Path
- Recaclulating Project Data
- Printing the TaskWritingException
- Microsoft Project 2010 MPP File Update
- Writing Updated Extended Attribute Definitions and Values to MPP
- Saving a Project as PDF
- Get Number of Pages in Project
- Retrieving Outline Codes</Description>
          <FolderName>WorkingWithProjects</FolderName>
          <Order>1</Order>
          <Examples>
            <Example>
              <Title>Creating an Empty Project File</Title>
              <Description>Aspose.Tasks can open existing files, but it can also create new files. This example explains how to create a new and empty project file from stream or using the ProjectWriter class.</Description>
              <FolderName>CreatingEmptyProjectFile</FolderName>
              <Order>1</Order>
              <DocLink>
                <DisplayName>Creating an Empty Project File</DisplayName>
                <Url>Creating+an+Empty+Project+File</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\Project2.xml</Path>
                </DataFile>
                <DataFile>
                  <Path>..\Data\Project1.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Setting Attributes for New Tasks</Title>
              <Description>With ASpose.Tasks, it is easy to add tasks to projects. This example explains how to add task and set the default start date for new tasks.</Description>
              <FolderName>SettingAttributesForNewTasks</FolderName>
              <Order>2</Order>
              <DocLink>
                <DisplayName>Setting Attributes for New Tasks</DisplayName>
                <Url>Setting+Attributes+for+New+Tasks</Url>
              </DocLink>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\project1.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Adding and Removing Tasks</Title>
              <Description>Projects are made up by a series of tasks with resources (staff or equipment) assigned to them. Aspose.Tasks lets you work with tasks in many different ways. A lot of the time, when you're creating a project, you'll want to add tasks. This example explains how to add and remove tasks from a project.</Description>
              <FolderName>AddRemoveTasks</FolderName>
              <Order>3</Order>
              <DocLink>
                <DisplayName>Adding and Removing Tasks</DisplayName>
                <Url>Adding+and+Removing+Tasks</Url>
              </DocLink>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Determining Project Version</Title>
              <Description>Aspose.Tasks lets you retrieve project file information such as the version of Microsoft Project that the file was created with. This example shows how.</Description>
              <FolderName>DeterminingProjectVersion</FolderName>
              <Order>4</Order>
              <DocLink>
                <DisplayName>Determining Project Version</DisplayName>
                <Url>Determining+Project+Version</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\input.xml</Path>
                </DataFile>
              </InputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>General Project Properties</Title>
              <Description>Microsoft Project saves project properties, metadata, for every project. The properties include the project's start and end dates, the current date and the status date, the type of calendar used and when a project is scheduled from. Aspose.Tasks lets you read and set project properties. This example shows how.</Description>
              <FolderName>GeneralProjectProperties</FolderName>
              <Order>5</Order>
              <DocLink>
                <DisplayName>General Project Properties</DisplayName>
                <Url>General+Project+Properties</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\project.mpp</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\project.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Default Project Properties</Title>
              <Description>Microsoft Project lets users set default project properties that speed up the process of setting up a project. The default properties define when a new task starts and finishes, sets the default overtime and standard pay rates and more. Aspose.Tasks supports these features. This example explains both how to read default properties and how to write default properties to a project file.</Description>
              <FolderName>DefaultProjectProperties</FolderName>
              <Order>6</Order>
              <DocLink>
                <DisplayName>Default Project Properties</DisplayName>
                <Url>Default+Project+Properties</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\project.mpp</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\project.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Writing MPP Project Summary Information</Title>
              <Description>Most programs save summary information with the files they save. Microsoft Project is no different. As well as the name of the author, the date the project was created and the last time it was edited and saved, it saves keywords, subject, comments and more. Aspose.Tasks lets you both read and write this type of information. This example explains how to open a project file, set the summary information and save it again.</Description>
              <FolderName>WriteMPPProjectSummary</FolderName>
              <Order>7</Order>
              <DocLink>
                <DisplayName>Writing MPP Project Summary Information</DisplayName>
                <Url>Writing+MPP+Project+Summary+Information</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\project.mpp</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\MPPAspose.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Fiscal Year Properties</Title>
              <Description>The fiscal year is the same as a financial year, or budget year. It is the dates between which an country, an organization or an individual calculates budgets and taxes. Microsoft Project lets users define a fiscal year for projects. Aspose.Tasks supports this functionality with properties that allow developers to both read fiscal year properties from existing projects, and set fiscal year properties when creating or working with projects.</Description>
              <FolderName>FiscalYearProperties</FolderName>
              <Order>8</Order>
              <DocLink>
                <DisplayName>Fiscal Year Properties</DisplayName>
                <Url>Fiscal+Year+Properties</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\project.mpp</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\savedProject.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
            <Example>
              <Title>Weekday Properties</Title>
              <Description>Microsoft Project lets users set a number of different weekday properties, for example what day a week starts on and how many working days are in a month. Aspose.Tasks support these features through a number of properties that can be used both to read weekday properties and to write them to a project.</Description>
              <FolderName>WeekdayProperties</FolderName>
              <Order>9</Order>
              <DocLink>
                <DisplayName>Weekday Properties</DisplayName>
                <Url>Weekday+Properties</Url>
              </DocLink>
              <InputFiles>
                <DataFile>
                  <Path>..\Data\project.mpp</Path>
                </DataFile>
              </InputFiles>
              <OutputFiles>
                <DataFile>
                  <Path>..\Data\savedProject.xml</Path>
                </DataFile>
              </OutputFiles>
              <Type>Console</Type>
            </Example>
          </Examples>
        </Folder>
      </Folders>
    </Folder>
  </Folders>
</Data>